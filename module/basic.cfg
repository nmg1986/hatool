#!/bin/bash
#--inputbox     <text> <height> <width> [<init>]
#--radiolist    <text> <height> <width> <list height> <tag1> <item1> <status1>...

module_name="基本配置"

HA_CF=/etc/ha.d/ha.cf
HA_RESOURCE=/etc/ha.d/haresources

HOSTNAME=""
HEARTBEAT_IFACE=""
VIRTUAL_ADDR=""
SERVICES=""
SERVICES_LIST=""

MHOSTNAME=""
SHOSTNAME=""
MADDR=""
SADDR=""

NGINX_ON=off
MEM_ON=off
TOMCAT_ON=off
MYSQL_ON=off
WEBLOGICON=off
MFSM_ON=off


source conf/basic

preview_basic_config()
{
	dialog  --title "配置预览" \
	        --yes-label "保存" \
		--no-label "修改" \
		--yesno "\n\n主机HOSTNAME:    ${MHOSTNAME} \
			 \n\n主   机   IP:    ${MADDR} \
		         \n\n备机HOSTNAME:    ${SHOSTNAME} \
			 \n\n备   机   IP:    ${SADDR}\
			 \n\n心   跳 网卡:    ${HEARTBEAT_IFACE} \
			 \n\n虚   拟   IP:    ${VIRTUAL_ADDR}\
			 \n\n启动 的 服务:    ${SERVICES_LIST}\n\n" -1 -1 
	return $? 

}
	
write_basic_config()
{
	preview_basic_config 
	if [ $? -ne 0 ];then
		choose_services 
	else
		GATEWAY=$(netstat -r | grep ^default | awk '{print $2}')
		sed -i "/^bcast/cbcast $HEARTBEAT_IFACE" $HA_CF
		#sed -i -e  "/^node/d;/^auto.*/anode $mhostname \nnode $shostname" $HA_CF 
		sed -i "/^node/,+1 c node $MHOSTNAME\nnode $SHOSTNAME" $HA_CF
		sed -i "/^ping/cping $GATEWAY" $HA_CF
		sed -i 's/^/#/' $HA_RESOURCE
		echo "##" >> $HA_RESOURCE
		echo "##" >> $HA_RESOURCE
		echo "#<HA-RESOURCE CONFIG : GENERATE BY DHEAVEN HATOOL 1.0>" >> $HA_RESOURCE
		echo "##" >> $HA_RESOURCE
		echo "##DATE: $(date +'%Y-%m-%d %H:%M:%S')" >> $HA_RESOURCE
		echo "" >> $HA_RESOURCE
		echo "$MHOSTNAME IPaddr::$VIRTUAL_ADDR $SERVICES_LIST" >> $HA_RESOURCE
		if grep -qw "@NMG" /etc/hosts ;then
			sed -i '/@NMG/,$ s/^/#/' /etc/hosts
			echo -e "$MADDR\t$MHOSTNAME" >> /etc/hosts
			echo -e "$SADDR\t$SHOSTNAME" >> /etc/hosts
		else
			echo -e "##ADD BY DHEAVEN @NMG" >> /etc/hosts
			echo -e "$MADDR\t$MHOSTNAME" >> /etc/hosts
			echo -e "$SADDR\t$SHOSTNAME" >> /etc/hosts
		fi
			
	 	(
                PERCENT=0
                while true
                do
                        if [ $PERCENT -gt 100 ];then
                                break
                        else
                                echo $PERCENT
                        fi
                        let PERCENT=PERCENT+1
                        sleep 0.01
                done
        	) | dialog --title "保存配置" \
                   --backtitle "监控配置" \
                   --gauge "正在写入配置文件..." 10 100 0
	fi
}

hostname_config()
{
    exec 3>&1
    HOSTNAME=$(dialog --ok-label "下一步" --cancel-label "$basic_cancel_label" \
	     --backtitle "$basic_backtitle" \
	     --title "$basic_title" \
	     --form "$basic_formtitle" 25 75 0 \
	     ""                  1 1	"" 	                1  0 0 0 \
	     "主机HOSTNAME:"   2 1	"$mhostname" 	                2  20 50 1000 \
	     ""                  3 1	"" 	                3  0 0 0 \
	     "主机 IP 地址:"     4 1	"$maddr" 	                4  20 50 1000 \
	     ""                  5 1	"" 	                5  0 0 0 \
	     ""                  6 1	"" 	                6  0 0 0 \
	     "备机HOSTNAME:"   7 1	"$shostname"  	        	7  20 50 1000  \
	     ""                  8 1	"" 	                8  0 0 0 \
	     "备机 IP 地址:"     9 1	"$saddr"  	        	9  20 50 1000  \
	     ""                  10 1	"" 	                10  0 0 0 \
	     ""                  11 1	"" 	                11  0  0  0 \
	     "虚拟 IP 地址:"     12 1	"$VIRTUAL_ADDR"         12  20 50 1000 \
	     ""                  13 1	"" 	                13  0  0  0 \
    2>&1 1>&3)
    returncode=$?
    exec 3>&-

    if [ $returncode -ne 0 ];then
	main_interface
    else
    	MHOSTNAME=$(echo $HOSTNAME | awk '{print $1}')
    	SHOSTNAME=$(echo $HOSTNAME | awk '{print $3}')
    	MADDR=$(echo $HOSTNAME | awk '{print $2}')
    	SADDR=$(echo $HOSTNAME | awk '{print $4}')
    	VIRTUAL_ADDR=$(echo $HOSTNAME | awk '{print $5}')
	if [ `echo $HOSTNAME | wc -w` -eq 5  ];then
	        heartbeat_iface
	else
		dialog --msgbox "输入信息不完整！请完整输入后继续！" 10 40
		hostname_config
	fi
	
    fi
}
heartbeat_iface()
{
    ethn=($(ifconfig | grep eth[0-9] | awk '{print $1}'))
    len=${#ethn[@]}
    list=$(for(( i=1 ; i<=$len ; i++ )); do n=`expr $i - 1`; echo "$i ${ethn[$n]} off"; done)
    HEARTBEAT_IFACE=$(dialog \
			--ok-label "下一步" \
			--cancel-label "返回" \
               		--title "心跳网卡" \
	       		--stdout \
               		--radiolist "请选择用于发送心跳广播的网卡接口" 20 100 $len $list \
		) 
    returncode=$?
    if [ $returncode -ne 0 ];then
        hostname_config
    else
	if [ -z $HEARTBEAT_IFACE ];then
		dialog --msgbox "请选择心跳网卡!" 10 40
		heartbeat_iface
	else
        	num=$(expr $HEARTBEAT_IFACE - 1) 
        	HEARTBEAT_IFACE=eth${num}
        	choose_services
	fi
    fi
}
choose_services()
{
    SERVICES=$(dialog --ok-label "完成" \
           --cancel-label "返回" \
           --title "选择需要启动的服务" \
           --backtitle "服务选择" \
           --stdout \
           --checklist "选择需要启动的服务:" 40 100 6 \
                        1  nginx         $NGINX_ON \
                        2  memcached     $MEM_ON \
                        3  tomcat        $TOMCAT_ON \
                        4  mysql         $MYSQL_ON\
                        5  weblogic      $WEBLOGICON \
                        6  mfsmaster     $MFSM_ON 
	)
    returncode=$?
    if [ $returncode -eq 0 ];then
    test -z $SERVICES && {
	dialog --msgbox "请选择需要监控的服务！" 10 40
	choose_services
    }
    for i in $SERVICES 
    do
        case $i in
	    '"1"')
		NGINX_ON=on
		SERVICES_LIST="nginx" ;;
	    '"2"')
		MEM_ON=on
		SERVICES_LIST="$SERVICES_LIST memcached" ;;
	    '"3"')
		TOMCAT_ON=on
		SERVICES_LIST="$SERVICES_LIST tomcat" ;;
	    '"4"')
		MYSQL_ON=on
		SERVICES_LIST="$SERVICES_LIST mysql" ;;
	    '"5"')
		WEBLOGICON=on
		SERVICES_LIST="$SERVICES_LIST weblogic" ;;
	    '"6"')
		MFSM_ON=on
		SERVICES_LIST="$SERVICES_LIST mfsmaster" ;;
	esac
    done
	write_basic_config
	main_interface
    else
	heartbeat_iface
    fi 
}

start_basic_config()
{
    if [ ! -f $HA_CF -o ! -f $HA_RESOURCE ];then
	dialog --msgbox "$basic_msg" 10 40			
	main_interface
    else 
    	hostname_config
    fi
}
